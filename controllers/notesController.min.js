const NotesModel=require("../models/notesModel"),NotesController={createNote:(req,res)=>{const note=req.body;NotesModel.createNote(note,((err,results)=>{if(err)return res.status(500).json({error:err.message});res.status(201).json({message:"Note created successfully",data:results})}))},getAllNotes:(req,res)=>{NotesModel.getAllNotes(((err,results)=>{if(err)return res.status(500).json({error:err.message});res.status(200).json(results)}))},getNoteById:(req,res)=>{const{id:id}=req.params;NotesModel.getNoteById(id,((err,results)=>err?res.status(500).json({error:err.message}):0===results.length?res.status(404).json({message:"Note not found"}):void res.status(200).json(results[0])))},updateNote:(req,res)=>{const{id:id}=req.params,note=req.body;NotesModel.updateNote(id,note,((err,results)=>err?res.status(500).json({error:err.message}):0===results.affectedRows?res.status(404).json({message:"Note not found"}):void res.status(200).json({message:"Note updated successfully"})))},deleteNote:(req,res)=>{const{id:id}=req.params;NotesModel.deleteNote(id,((err,results)=>err?res.status(500).json({error:err.message}):0===results.affectedRows?res.status(404).json({message:"Note not found"}):void res.status(200).json({message:"Note deleted successfully"})))}};module.exports=NotesController;